/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gsp;

import controleur.CodeAuto;
import controleur.Coeur_Gsp;
import controleur.ConnectDataBase;
import controleur.ControleurTailleMaximale;
import controleur.SubJTable;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jordie
 */
public class Vente extends javax.swing.JDialog {

    ControleurTailleMaximale c = new ControleurTailleMaximale();
    Coeur_Gsp cg = new Coeur_Gsp();
    public String operation = "";
    public int ligne;
    public String pseudo, madate, codebar;
    private Statement st;
    private ResultSet rs;
    private DefaultTableModel dtm;
    private String codcli;
    CodeAuto ca = new CodeAuto();
    private String numfact;
    private double qte;
    private double rem;
    private double pht;
    private double total;
    private double tva;
    private double montPaie;
    private String nomcli;
    private String codprod;
    private double qtestock;
    private String libprod;

    /**
     * Creates new form Vente
     */
    public Vente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        c.TailleMaximale();
        //this.setSize(812, c.ysize);
        this.setSize(923, c.ysize);
        tabProd.setDefaultRenderer(Object.class, new SubJTable());
        txtDate.setText(madate);
        txtCaisse.setText(pseudo);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        cmbCli = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        txtDate = new javax.swing.JTextField();
        txtCaisse = new javax.swing.JTextField();
        txtCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQte = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPht = new javax.swing.JTextField();
        txtTva = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPtc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDev = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtTTC = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtRem = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNet = new javax.swing.JTextField();
        txtMont = new javax.swing.JTextField();
        txtRet = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cmbDev = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabProd = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(104, 151, 215));

        jLabel3.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TOTAL EN :");

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Vente");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jCheckBox1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckBox1.setText("Client enregistré");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        cmbCli.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cmbCli.setEnabled(false);

        jTextField1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("CLIENT ORDINAIRE");
        jTextField1.setEnabled(false);

        jCheckBox2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckBox2.setText("Client ordinaire");
        jCheckBox2.setOpaque(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Plus_24px.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtDate.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate.setEnabled(false);

        txtCaisse.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        txtCaisse.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCaisse.setEnabled(false);
        txtCaisse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaisseActionPerformed(evt);
            }
        });

        txtCode.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodeKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Code barre");

        txtQte.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtQte.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQteKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("Quantité");

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("Prix HT");

        txtPht.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtPht.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPht.setEnabled(false);

        txtTva.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtTva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTva.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel7.setText("TVA");

        txtPtc.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtPtc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPtc.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel8.setText("Prix TC");

        txtDev.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtDev.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDev.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setText("Devise");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Shopping Cart_24px.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtTTC.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtTTC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTTC.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setText("Total TC");

        txtRem.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtRem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRemKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel11.setText("Remise");

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel12.setText("Net à payer");

        txtNet.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtNet.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNet.setEnabled(false);
        txtNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetActionPerformed(evt);
            }
        });

        txtMont.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtMont.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMont.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMontKeyReleased(evt);
            }
        });

        txtRet.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtRet.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRet.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel13.setText("Retour");

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel14.setText("Montant");

        cmbDev.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cmbDev.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbDevPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel15.setText("Devise");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Checkmark_24px.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete_24px.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tabProd.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tabProd.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabProd.setRowHeight(45);
        jScrollPane1.setViewportView(tabProd);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel_24px.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txtTTC, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 60, Short.MAX_VALUE))
                            .addComponent(txtNet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMont, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(txtRet, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(cmbDev, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(cmbCli, 0, 201, Short.MAX_VALUE)
                                    .addComponent(txtCode))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCaisse)
                                            .addComponent(txtDate)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(txtQte, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(txtPht, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(txtTva, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(txtPtc, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(txtDev, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCaisse, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCheckBox1)
                                .addComponent(jCheckBox2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbCli, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtQte, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPht, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTva, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPtc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtDev, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(35, 35, 35)))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTTC, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRet, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDev, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtMont, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        arrayStock();
        cg.remplirComboClient("noms", "clients", cmbCli);
        cg.remplirCombo("libdev", "devise", cmbDev);
        txtTTC.setText(String.valueOf(cg.getPTTC(txtCode.getText())));
        txtNet.setText(String.valueOf(cg.getPTTC(txtCode.getText())));
        jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            cmbCli.setEnabled(true);
            jCheckBox2.setSelected(false);
        } else {
            cmbCli.setEnabled(false);
            jCheckBox2.setSelected(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            cmbCli.setEnabled(false);
            jCheckBox1.setSelected(false);
        } else {
            cmbCli.setEnabled(true);
            jCheckBox1.setSelected(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Client cli = new Client(new javax.swing.JFrame(), true);
        cli.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                st = new ConnectDataBase().getConnexion().createStatement();
                rs = st.executeQuery("select (produit.pu+(produit.pu*produit.mb/100)), (produit.pu+(produit.pu*produit.mb/100))*produit.tva/100, (produit.pu+(produit.pu*produit.mb/100)) + (produit.pu+(produit.pu*produit.mb/100))*produit.tva/100,devise.libdev from produit inner join stocker on stocker.codprod=produit.codprod inner join devise on devise.coddev=produit.coddev where stocker.codebar = '" + txtCode.getText() + "'");
                while (rs.next()) {
                    txtPht.setText(String.valueOf(rs.getDouble(1)));
                    txtTva.setText(String.valueOf(rs.getDouble(2)));
                    txtPtc.setText(String.valueOf(rs.getDouble(3)));
                    txtDev.setText(String.valueOf(rs.getString(4)));
                }
                rs.close();
                st.close();
            } catch (SQLException e) {
                cg.boiteDeDialogue(e.toString(), "erreur");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String a[] = {""};
            dtm = new DefaultTableModel(null, a);
            Object r[] = new Object[1];
            if (txtQte.getText().isEmpty() || txtQte.getText().equals("0")) {
                cg.boiteDeDialogue("La quantité ne doit pas être vide ou égale à 0.", "erreur");
            } else {
                st = new ConnectDataBase().getConnexion().createStatement();
                rs = st.executeQuery("select * from destocker where codebar='" + txtCode.getText() + "'");
                while (rs.next()) {
                    r[0] = rs.getObject(1);
                    dtm.addRow(r);
                }
                if (dtm.getRowCount() != 0) {
                    cg.boiteDeDialogue("Ce produit est expiré.", "erreur");
                } else {
                    if (jCheckBox1.isSelected()) {
                        codcli = cmbCli.getSelectedItem().toString();
                    } else {
                        codcli = "CLIENT ORDINAIRE";
                    }
                    st = new ConnectDataBase().getConnexion().createStatement();
                    rs = st.executeQuery("select qte from tmvm where codbar='" + txtCode.getText() + "'");
                    while (rs.next()) {
                        qte = rs.getDouble(1);
                    }
                    if (qte == 0.0) {
                        cg.miseAjour("insert into tmvm values('" + cg.nouvelleLigne("numtmvm", "tmvm") + "','" + cg.ligne("codcli", "clients", codcli, "noms") + "','" + cg.ligne("coduti", "utilisateur", txtCaisse.getText(), "pseudo") + "','" + txtCode.getText() + "','" + txtQte.getText() + "','" + txtDate.getText() + "')");
                    } else {
                        cg.miseAjour("update tmvm set codcli='" + cg.ligne("codcli", "clients", codcli, "noms") + "',coduti='" + cg.ligne("coduti", "utilisateur", txtCaisse.getText(), "pseudo") + "',qte='" + (qte + Double.parseDouble(txtQte.getText())) + "',dateven='" + txtDate.getText() + "' where codbar='" + txtCode.getText() + "'");
                    }
                    arrayStock();
                    pht = pht + Double.parseDouble(txtPht.getText()) * Double.parseDouble(txtQte.getText());
                    tva = tva + Double.parseDouble(txtTva.getText());
                    txtTTC.setText(String.valueOf(cg.getPTTC(txtCode.getText())));
                    txtNet.setText(String.valueOf(cg.getPTTC(txtCode.getText())));
                    jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
                    txtCode.setText("");
                    txtQte.setText("");
                    txtPht.setText("");
                    txtTva.setText("");
                    txtPtc.setText("");
                    txtDev.setText("");
                    codcli = "";
                    qte = 0.0;
                    txtCode.requestFocus();
                    rs.close();
                    st.close();
                }
            }
        } catch (SQLException e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            if (tabProd.getSelectedRow() == -1) {
                cg.boiteDeDialogue("Veuillez selectionner le produit à retirer.", "erreur");
            } else {
                cg.miseAjour("delete from tmvm where codbar='" + tabProd.getValueAt(tabProd.getSelectedRow(), 0) + "'");
                arrayStock();
                txtTTC.setText(String.valueOf(cg.getPTTC(txtCode.getText())));
                if (txtRem.getText().isEmpty()) {
                    rem = 0.0;
                } else {
                    rem = Double.parseDouble(txtRem.getText());
                }
                txtNet.setText(String.valueOf(cg.getPTTC(txtCode.getText()) - (cg.getPTTC(txtCode.getText()) * rem / 100)));
                jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
                txtCode.requestFocus();
            }
        } catch (Exception e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            cg.miseAjour("delete from tmvm");
            arrayStock();
            txtTTC.setText(String.valueOf(cg.getPTTC(txtCode.getText())));
            txtCode.setText("");
            txtQte.setText("");
            txtPht.setText("");
            txtTva.setText("");
            txtPtc.setText("");
            txtDev.setText("");
            txtTTC.setText("");
            txtRem.setText("");
            txtNet.setText("");
            txtMont.setText("");
            txtRet.setText("");
            jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
            txtCode.requestFocus();
            txtCode.requestFocus();
        } catch (Exception e) {
            //cg.boiteDeDialogue(e.toString(), "erreur");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtRemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRemKeyPressed

    private void txtRemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRemKeyReleased
        try {
            if (txtRem.getText().isEmpty()) {
                rem = 0.0;
            } else {
                rem = Double.parseDouble(txtRem.getText());
            }
            txtNet.setText(String.valueOf((Double.parseDouble(txtTTC.getText())) - ((Double.parseDouble(txtTTC.getText())) * rem / 100)));
            jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
        } catch (NumberFormatException e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtRemKeyReleased

    private void txtMontKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontKeyReleased
        try {
            if (txtMont.getText().isEmpty()) {
                //txtMont.setText("0");
                txtRet.setText(String.valueOf(0 - getPrixTotalLab()));
                jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
            } else {
                txtRet.setText((String.valueOf(Double.parseDouble(txtMont.getText()) - getPrixTotalLab())));
                jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
            }
        } catch (NumberFormatException e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
        }         // TODO add your handling code here:
    }//GEN-LAST:event_txtMontKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            st = new ConnectDataBase().getConnexion().createStatement();
            if (jCheckBox1.isSelected()) {
                nomcli = cmbCli.getSelectedItem().toString();
            } else {
                nomcli = "CLIENT ORDINAIRE";
            }
            if (tabProd.getRowCount() == 0 || txtTTC.getText().isEmpty() || txtRem.getText().isEmpty() || txtNet.getText().isEmpty() || txtMont.getText().isEmpty() || txtRet.getText().isEmpty()) {
            } else if ((Double.parseDouble(txtMont.getText()) / cg.getTaux(cmbDev.getSelectedItem().toString())) < ((Double.parseDouble(txtNet.getText())) / cg.getTaux(cmbDev.getSelectedItem().toString()))) {
                cg.boiteDeDialogue("Montant perçu est inférieur au montant à payer.", "erreur");
            } else {
                rs = st.executeQuery("select * from entreprise");
                numfact = ca.createCode();
                String entreprise = "", telephone = "", nrc = "", impot = "", adresse = "", soulent = "";
                String ticket = "Ticket N° : " + numfact.toUpperCase() + "\t\t" + txtDate.getText() + "\n";
                codcli = nomcli + "\t\tCaisse : " + txtCaisse.getText() + "\n";
                while (rs.next()) {
                    entreprise = rs.getString(2) + " " + rs.getString(3).toLowerCase() + "\n";
                    telephone = "Tél. : " + rs.getString(6) + "\n";
                    nrc = "NRC : " + rs.getString(5) + "\n";
                    impot = "N° impot : " + rs.getString(4) + "\n";
                    adresse = "Adresse : " + rs.getString(8) + ", " + rs.getString(7) + "\n";
                }
                for (int i = 0; i <= (adresse.length()); i++) {
                    soulent = soulent + "=";
                }
                soulent = soulent + "\n";
                Facture fac = new Facture(new javax.swing.JFrame(), true);
                fac.txtFac.setText(entreprise);
                fac.txtFac.append(nrc);
                fac.txtFac.append(impot);
                fac.txtFac.append(telephone);
                fac.txtFac.append(adresse);
                fac.txtFac.append(soulent);
                fac.txtFac.append(ticket);
                fac.txtFac.append(codcli);
                fac.txtFac.append("\n\n");
                for (int i = 0; i < tabProd.getRowCount(); i++) {
                    cg.miseAjour("insert into vente values('" + cg.nouvelleLigne("numtmvm", "vente") + "','" + cg.ligne("codcli", "clients", nomcli, "noms") + "','" + cg.ligne("coduti", "utilisateur", txtCaisse.getText(), "pseudo") + "','" + numfact.toUpperCase() + "','" + tabProd.getValueAt(i, 0) + "','" + tabProd.getValueAt(i, 2) + "','" + txtDate.getText() + "')");
                    rs = st.executeQuery("select produit.libprod from produit inner join stocker on stocker.codprod=produit.codprod where stocker.codebar='" + tabProd.getValueAt(i, 0) + "'");
                    while (rs.next()) {
                        libprod = rs.getString(1);
                    }
                    fac.txtFac.append(libprod + "\t" + tabProd.getValueAt(i, 2) + "\t" + cg.getPvUnitaireCodebarre(tabProd.getValueAt(i, 0).toString()) + "\t" + (Double.parseDouble(tabProd.getValueAt(i, 2).toString()) * cg.getPvUnitaireCodebarre(tabProd.getValueAt(i, 0).toString())) + "\n");
                    total = (Double.parseDouble(tabProd.getValueAt(i, 2).toString()) * cg.getPvUnitaireCodebarre(tabProd.getValueAt(i, 0).toString()));
                    //pht = pht + cg.getPvUnitaireCodebarre(tabProd.getValueAt(i, 0).toString());
                    rs = st.executeQuery("select qte from stockCourant where codprod='" + cg.ligne("codprod", "produit", tabProd.getValueAt(i, 1).toString(), "libprod") + "'");
                    while (rs.next()) {
                        qtestock = rs.getDouble(1);
                    }
                    if (qtestock == 0.0) {
                        cg.miseAjour("insert into stockCourant values('" + cg.ligne("codprod", "produit", tabProd.getValueAt(i, 1).toString(), "libprod") + "','" + txtQte.getText() + "')");
                    } else {
                        cg.miseAjour("update stockCourant set qte='" + (qtestock - Double.parseDouble(tabProd.getValueAt(i, 2).toString())) + "' where codprod='" + cg.ligne("codprod", "produit", tabProd.getValueAt(i, 1).toString(), "libprod") + "'");
                    }
                }
                cg.miseAjour("insert into facture values('" + numfact.toUpperCase() + "','" + rem + "')");
                montPaie = (Double.parseDouble(txtTTC.getText())) * cg.getTaux(cmbDev.getSelectedItem().toString()) - ((Double.parseDouble(txtRem.getText()) / 100) * ((Double.parseDouble(txtTTC.getText())) * cg.getTaux(cmbDev.getSelectedItem().toString())));
                fac.txtFac.append("***********CALCUL EN DEVISE DE BASE********************\n");
                tva = ((Double.parseDouble(txtTTC.getText())) * (tva / 100));
                fac.txtFac.append("Total HT : " + pht + " " + cg.getDevBase() + "\t TVA : " + tva + " " + cg.getDevBase() + "\t Rem. : " + txtRem.getText() + "%\n");
                fac.txtFac.append("Remise : " + ((Double.parseDouble(txtRem.getText()) / 100) * ((Double.parseDouble(txtTTC.getText())))) + " " + cg.getDevBase() + " ");
                fac.txtFac.append("\t Total TTC : " + (Double.parseDouble(txtTTC.getText())) + " " + cg.getDevBase() + "\n");
                fac.txtFac.append("***********CALCUL EN DEVISE DE PAIEMENT****************\n");
                if (cg.getTaux(cmbDev.getSelectedItem().toString()) > cg.getTauxBase()) {
                    fac.txtFac.append("Total HT :" + " " + pht / cg.getTaux(cmbDev.getSelectedItem().toString()) + " " + cmbDev.getSelectedItem() + "\t TVA : " + tva / cg.getTaux(cmbDev.getSelectedItem().toString()) + " " + cmbDev.getSelectedItem() + "\t Rem. : " + txtRem.getText() + "%\n");
                    fac.txtFac.append("Remise : " + (((Double.parseDouble(txtRem.getText()) / 100) * ((Double.parseDouble(txtTTC.getText()))) / cg.getTaux(cmbDev.getSelectedItem().toString()))) + " " + cmbDev.getSelectedItem() + " ");
                    fac.txtFac.append("\t Total TTC : " + (Double.parseDouble(txtTTC.getText()) / cg.getTaux(cmbDev.getSelectedItem().toString())) + " " + cmbDev.getSelectedItem() + "\n");
                } else {
                    fac.txtFac.append("Total HT :" + " " + pht * cg.getTaux(cmbDev.getSelectedItem().toString()) + " " + cmbDev.getSelectedItem() + "\t TVA : " + tva * cg.getTaux(cmbDev.getSelectedItem().toString()) + " " + cmbDev.getSelectedItem() + "\t Rem. : " + txtRem.getText() + "%\n");
                    fac.txtFac.append("Remise : " + (((Double.parseDouble(txtRem.getText()) / 100) * ((Double.parseDouble(txtTTC.getText()))) * cg.getTaux(cmbDev.getSelectedItem().toString()))) + " " + cmbDev.getSelectedItem() + " ");
                    fac.txtFac.append("\t Total TTC : " + (Double.parseDouble(txtTTC.getText()) * cg.getTaux(cmbDev.getSelectedItem().toString())) + " " + cmbDev.getSelectedItem() + "\n");
                }
                fac.txtFac.append("**********************NET A PAYER*********************\n");
                if (cg.getTaux(cmbDev.getSelectedItem().toString()) > cg.getTauxBase()) {
                    fac.txtFac.append("Net à payer : " + txtNet.getText() + " " + cg.getDevBase() + "\t Soit " + (Double.parseDouble(txtNet.getText()) / cg.getTaux(cmbDev.getSelectedItem().toString())) + " " + cmbDev.getSelectedItem() + "\n");
                } else {
                    fac.txtFac.append("Net à payer : " + txtNet.getText() + " " + cg.getDevBase() + "\t Soit " + (Double.parseDouble(txtNet.getText()) * cg.getTaux(cmbDev.getSelectedItem().toString())) + " " + cmbDev.getSelectedItem() + "\n");
                }
//                fac.txtFac.append("*********************PAIEMENT************************\n");
//                if (cg.getTaux(cmbDev.getSelectedItem().toString()) > cg.getTauxBase()) {
//                    fac.txtFac.append("Montant payé : " + txtMont.getText() + " " + cmbDev.getSelectedItem() + " Soit " + (Double.parseDouble(txtMont.getText()) * cg.getTaux(cmbDev.getSelectedItem().toString())) + " " + cg.getDevBase() + "\n");
//                } else {
//                    fac.txtFac.append("Montant payé : " + txtMont.getText() + " " + cmbDev.getSelectedItem() + " Soit " + (Double.parseDouble(txtMont.getText()) / cg.getTaux(cmbDev.getSelectedItem().toString())) + " " + cg.getDevBase() + "\n");
//                }
                fac.txtFac.append("***** Merci pour votre confiance et fidélité. *****\n\n"
                        + "La qualité au meilleur prix.\n"
                        + "Les marchandises vendues\n"
                        + "ne peuvent pas être reprises,\n"
                        + "ni échangées. ");
                jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());
                cg.miseAjour("delete from tmvm");
                cg.boiteDeDialogue("Opération réussie.", "information");
                fac.setVisible(true);
                arrayStock();
                txtCode.setText("");
                txtQte.setText("");
                txtPht.setText("");
                txtTva.setText("");
                txtPtc.setText("");
                txtDev.setText("");
                txtTTC.setText("");
                txtRem.setText("");
                txtNet.setText("");
                txtMont.setText("");
                txtRet.setText("");
            }
            rs.close();
            st.close();
        } catch (Exception e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtCaisseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaisseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaisseActionPerformed

    private void txtCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeKeyReleased

    private void txtQteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQteKeyReleased

    private void cmbDevPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbDevPopupMenuWillBecomeInvisible
        jLabel3.setText("TOTAL EN " + cmbDev.getSelectedItem() + " : " + getPrixTotalLab() + " " + cmbDev.getSelectedItem());        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDevPopupMenuWillBecomeInvisible

    private void txtNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetActionPerformed

    public void arrayStock() {
        try {
            String[] entete = {"Code barre", "Produit", "Quantité"};
            Object[] row = new Object[4];
            dtm = new DefaultTableModel(null, entete);
            st = new ConnectDataBase().getConnexion().createStatement();
            rs = st.executeQuery("select tmvm.codbar,produit.libprod,tmvm.qte from tmvm inner join stocker on stocker.codebar=tmvm.codbar inner join produit on produit.codprod=stocker.codprod");
            while (rs.next()) {
                row[0] = rs.getObject(1);
                row[1] = rs.getObject(2);
                row[2] = rs.getObject(3);
                dtm.addRow(row);
            }
            tabProd.setModel(dtm);
            tabProd.getColumnModel().getColumn(0).setPreferredWidth(200);
            tabProd.getColumnModel().getColumn(1).setPreferredWidth(500);
            tabProd.getColumnModel().getColumn(2).setPreferredWidth(100);
            rs.close();
            st.close();
        } catch (SQLException e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
        }
    }

    public double getPrixTotalLab() {
        try {
            if (cg.getTaux(cmbDev.getSelectedItem().toString()) > cg.getTauxBase()) {
                if (cg.getTaux(cmbDev.getSelectedItem().toString()) != 1) {
                    return (Double.parseDouble(txtNet.getText()) / cg.getTaux(cmbDev.getSelectedItem().toString()));
                } else {
                    return (Double.parseDouble(txtNet.getText()));
                }
            } else {
                if (cg.getTaux(cmbDev.getSelectedItem().toString()) != 1) {
                    return (Double.parseDouble(txtNet.getText()) * cg.getTaux(cmbDev.getSelectedItem().toString()));
                } else {
                    return (Double.parseDouble(txtNet.getText()));
                }
            }
        } catch (NumberFormatException e) {
            cg.boiteDeDialogue(e.toString(), "erreur");
            return 0;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Vente dialog = new Vente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbCli;
    private javax.swing.JComboBox<String> cmbDev;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tabProd;
    public javax.swing.JTextField txtCaisse;
    private javax.swing.JTextField txtCode;
    public javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDev;
    private javax.swing.JTextField txtMont;
    private javax.swing.JTextField txtNet;
    private javax.swing.JTextField txtPht;
    private javax.swing.JTextField txtPtc;
    private javax.swing.JTextField txtQte;
    private javax.swing.JTextField txtRem;
    private javax.swing.JTextField txtRet;
    private javax.swing.JTextField txtTTC;
    private javax.swing.JTextField txtTva;
    // End of variables declaration//GEN-END:variables
}
